import streamlit as st
from groq import Groq
import os
from dotenv import load_dotenv
from PyPDF2 import PdfReader

# Charger la cl√© API Groq depuis un fichier .env
load_dotenv()
groq_key = os.getenv("GROQ_API_KEY")

# Titre de l'application
st.title("√âvaluation de CV par IA")
st.write("""
Cette application utilise l'IA pour √©valuer un CV par rapport √† une offre d'emploi.
""")

# Fonction pour extraire le texte d'un PDF
def extract_text_from_pdf(pdf_file):
    reader = PdfReader(pdf_file)
    text = ""
    for page in reader.pages:
        text += page.extract_text()
    return text

# Fonction pour √©valuer le CV
def evaluate_cv(cv_text, job_description):
    prompt = f"""
Tu es un expert en recrutement et en analyse de CV. 
Ton r√¥le est d'√©valuer un CV par rapport √† une offre d'emploi, puis de g√©n√©rer un CV optimis√©.

CV du candidat :
\"\"\"  
{cv_text}  
\"\"\"  

Offre d'emploi : 
\"\"\"  
{job_description}  
\"\"\"  

### Instructions pour l'√©valuation :
1. Pour chaque crit√®re, √©value si l'√©l√©ment est pr√©sent (‚úÖ), partiellement pr√©sent (‚ö†Ô∏è), ou absent (‚ùå).
2. Explique clairement pourquoi tu as donn√© cette √©valuation :
   - Si l'√©l√©ment est pr√©sent (‚úÖ), pr√©cise ce qui est pr√©sent et comment cela correspond √† l'offre.
   - Si l'√©l√©ment est partiellement pr√©sent (‚ö†Ô∏è), explique ce qui manque ou ce qui pourrait √™tre am√©lior√©.
   - Si l'√©l√©ment est absent (‚ùå), explique pourquoi il est important pour l'offre et ce qui pourrait √™tre ajout√©.
3. Pour les comp√©tences techniques (Hard Skills), compare explicitement les comp√©tences mentionn√©es dans le CV avec celles requises dans l'offre.
   - Si une comp√©tence requise est absente, explique pourquoi elle est importante pour le poste.
4. Structure la sortie en trois parties :
   - [EXTRACTION] : R√©sum√© structur√© des informations du CV.
   - [√âVALUATION] : Analyse point par point avec ‚úÖ, ‚ö†Ô∏è, ou ‚ùå, et une explication d√©taill√©e pour chaque crit√®re.
   - [CV AM√âLIOR√â] : Proposition d'une version am√©lior√©e du CV.

Exemples d'√©valuation :

Exemple 1 :
CV du candidat :
- Comp√©tences : JavaScript, React, Node.js, MySQL
Offre d'emploi :
- Comp√©tences requises : React, Node.js, Python, SQL

√âvaluation :
- ‚úÖ Langages de programmation : Pr√©sent (JavaScript, React, Node.js)
  - Le CV mentionne JavaScript, React et Node.js, ce qui correspond aux attentes de l'offre.
- ‚ùå Langages de programmation : Absent (Python, SQL)
  - Le CV ne mentionne pas Python et SQL, qui sont requis pour ce poste. Python est important pour le d√©veloppement backend, et SQL est essentiel pour la gestion de bases de donn√©es.

Exemple 2 :
CV du candidat :
- Comp√©tences : Python, TensorFlow, Git
Offre d'emploi :
- Comp√©tences requises : Python, PyTorch, Docker

√âvaluation :
- ‚úÖ Langages de programmation : Pr√©sent (Python)
  - Le CV mentionne Python, ce qui correspond aux attentes de l'offre.
- ‚ö†Ô∏è Biblioth√®ques & Frameworks : Partiel (TensorFlow mentionn√©, mais PyTorch absent)
  - Le CV mentionne TensorFlow, mais PyTorch, qui est requis pour ce poste, est absent. PyTorch est important pour le d√©veloppement de mod√®les de machine learning.
- ‚ùå Outils de d√©veloppement : Absent (Docker)
  - Le CV ne mentionne pas Docker, qui est requis pour ce poste. Docker est essentiel pour le d√©ploiement de conteneurs.

### Crit√®res d'√©valuation :

 1. Searchability (Visibilit√© & Mots-cl√©s)
- Informations de contact : V√©rifie la pr√©sence d‚Äôun e-mail, num√©ro de t√©l√©phone, profil LinkedIn, GitHub ou portfolio.
- R√©sum√© (Summary/Profile) : Existe-t-il une section donnant une vue d‚Äôensemble rapide du candidat et de ses objectifs ?
- Mots-cl√©s m√©tiers & techniques :Le CV inclut-il des termes sp√©cifiques au poste cibl√© (ex. Machine Learning, NLP, Deep Learning, XGBoost) ?
- Structure adapt√©e aux ATS (Applicant Tracking Systems) :
  - Utilisation de titres clairs et standards (ex. "Exp√©rience professionnelle", "Comp√©tences techniques").
  - Absence d‚Äô√©l√©ments pouvant poser probl√®me pour les logiciels de recrutement (images, tableaux, colonnes).
- Lien vers des travaux/projets publics : Pr√©sence de liens vers des projets GitHub, publications, ou portfolio.

 2.Hard Skills (Comp√©tences techniques)
- Compare les langages mentionn√©s dans le CV avec ceux requis dans l'offre.
  - Si un langage requis est absent, explique pourquoi il est important pour le poste.
- Biblioth√®ques & Frameworks : TensorFlow, PyTorch, Scikit-learn, etc. Bien indiqu√©s ?
  - Compare les frameworks mentionn√©s dans le CV avec ceux requis dans l'offre.
  - Si un framework requis est absent, explique pourquoi il est important pour le poste.
- Outils de d√©veloppement : Git, Docker, Kubernetes,Gitlab etc.
  - Compare les outils mentionn√©s dans le CV avec ceux requis dans l'offre.
  - Si un outil requis est absent, explique pourquoi il est important pour le poste.
- Bases de donn√©es : PostgreSQL, MongoDB, etc.
  - Compare les bases de donn√©es mentionn√©es dans le CV avec celles requises dans l'offre.
  - Si une base de donn√©es requise est absente, explique pourquoi elle est importante pour le poste.
- D√©ploiement & MLOps : Exp√©rience avec AWS, GCP, Azure, ou CI/CD ?
  - Compare les comp√©tences de d√©ploiement mentionn√©es dans le CV avec celles requises dans l'offre.
  - Si une comp√©tence requise est absente, explique pourquoi elle est importante pour le poste.
- Donn√©es et analyse : Dataiku, Tableau, Power BI, etc.
  - Compare les outils d'analyse de donn√©es mentionn√©s dans le CV avec ceux requis dans l'offre.
  - Si un outil requis est absent, explique pourquoi il est important pour le poste.
- Projets concrets :Les comp√©tences techniques sont-elles d√©montr√©es √† travers des r√©alisations sp√©cifiques ?
  - V√©rifie si les projets mentionn√©s dans le CV correspondent aux attentes de l'offre.

 3. Soft Skills (Comp√©tences interpersonnelles)
- **Communication : Le CV est-il r√©dig√© de mani√®re claire et concise ? Pr√©sence d‚Äôun r√©sum√© efficace ?
- Travail en √©quipe : Mention de collaborations dans des projets de groupe ou en entreprise ?
- Gestion de projet : Exp√©rience en gestion agile (Scrum, Kanban) ?
- Autonomie & auto-apprentissage : Indications sur la capacit√© √† apprendre de nouveaux outils ou concepts ?
- Capacit√© d‚Äôadaptation : Transitions entre diff√©rents domaines ou technologies visibles ?

 4.Exp√©rience professionnelle & Projets
- D√©tails des missions :Chaque exp√©rience d√©crit-elle clairement les responsabilit√©s et t√¢ches effectu√©es ?
- R√©sultats mesurables : Impact du travail chiffr√© (ex. "R√©duction du temps d‚Äôinf√©rence de 30%", "Am√©lioration de l‚Äôaccuracy de 10%") ?
- Exp√©rience avec des donn√©es r√©elles : Manipulation de jeux de donn√©es volumineux, traitement de donn√©es textuelles ?
- Projets personnels :Contributions open source, Kaggle/Zindi, publications ?

 5. Formation & Certifications
- Dipl√¥mes :Master, PhD, ou certifications en data science, machine learning ?
- Certifications techniques : TensorFlow Developer, AWS Certified ML, Google Data Engineer ?
- Cours en ligne pertinents : Udacity, Coursera, DeepLearning.AI ?
- Th√®ses & publications : Articles publi√©s en lien avec le domaine ?

6. **Clart√© & Lisibilit√©
- Bonne structuration : Sections bien s√©par√©es, titres en gras, listes √† puces ?
- Hi√©rarchisation des informations : Les exp√©riences et comp√©tences les plus pertinentes sont-elles mises en avant ?
- Police et mise en page lisibles : Pas de surcharge d‚Äôinformations, espace suffisant entre les √©l√©ments ?
- Longueur du CV adapt√©e :** Moins de 2 pages pour un junior, pas plus de 3 pour un senior ?

7. Personnalisation & Pertinence
- CV adapt√© au poste cibl√© : Contenu pertinent pour l‚Äôemploi vis√© ?
- R√©sum√© percutant :** Objectifs et forces du candidat mis en avant ?
- Ad√©quation entre exp√©rience et job description :** Exp√©riences align√©es avec les attentes du poste ?

8. Impact & R√©sultats
- Utilisation de chiffres et r√©sultats mesurables : R√©duction de co√ªts, augmentation de performance, impact business mesur√© ?
- R√©f√©rences √† des r√©alisations significatives :Publications, brevets, mod√®les en production, leadership technique ?
- Distinctions & comp√©titions :Kaggle, Zindi, hackathons gagn√©s, r√©compenses professionnelles ?
 Format de sortie attendu :
- [EXTRACTION] R√©sum√© structur√© des informations du CV.
- [√âVALUATION] Une analyse point par point avec ‚úÖ (Pr√©sent), ‚ö†Ô∏è (Partiel) ou ‚ùå (Absent) pour chaque crit√®re.
  - Pour chaque √©valuation, explique clairement pourquoi tu as donn√© ‚úÖ, ‚ö†Ô∏è, ou ‚ùå.
  - Si un √©l√©ment requis par l'offre est absent, explique pourquoi il est important et ce qui pourrait √™tre ajout√©.
- [CV AM√âLIOR√â] Proposition d'une version am√©lior√©e du CV.
"""

    client = Groq(api_key=groq_key)
    chat_completion = client.chat.completions.create(
        messages=[
            {"role": "system", "content": "Tu es un expert en recrutement."},
            {"role": "user", "content": prompt}
        ],
        model="llama-3.3-70b-versatile",
    )

    return chat_completion.choices[0].message.content

# Interface utilisateur
with st.form("cv_evaluation_form"):
    st.subheader("1. T√©l√©chargez votre CV")
    uploaded_file = st.file_uploader("Choisissez un fichier PDF", type="pdf", help="Seuls les fichiers PDF sont accept√©s.")

    st.subheader("2. Description du poste")
    job_description = st.text_area("Collez la description du poste ici :", height=150, placeholder="Exemple : Nous recherchons un d√©veloppeur Python avec 3 ans d'exp√©rience...")

    # Bouton pour soumettre le formulaire
    submitted = st.form_submit_button("üöÄ √âvaluer le CV")

# Traitement apr√®s soumission du formulaire
if submitted:
    if not uploaded_file or not job_description:
        st.error("‚ùå Veuillez t√©l√©charger un fichier PDF et fournir une description de poste.")
    else:
        with st.spinner("üîç Extraction du texte et analyse en cours..."):
            try:
                # Extraire le texte du PDF
                cv_text = extract_text_from_pdf(uploaded_file)
                
                # Afficher un aper√ßu du texte extrait
                with st.expander("Aper√ßu du texte extrait du CV"):
                    st.write(cv_text[:1000] + "...")  # Afficher les 1000 premiers caract√®res

                # √âvaluer le CV
                evaluation = evaluate_cv(cv_text, job_description)
                
                # Afficher les r√©sultats
                st.success("‚úÖ √âvaluation termin√©e !")
                st.markdown("---")
                st.subheader("üìä R√©sultat de l'√©valuation")
                st.write(evaluation)
                
            except Exception as e:
                st.error(f"‚ùå Une erreur s'est produite : {e}")